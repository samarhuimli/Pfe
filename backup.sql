--
-- PostgreSQL database dump
--

-- Dumped from database version 16.6
-- Dumped by pg_dump version 17.4

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: client; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.client (
    id_client integer NOT NULL,
    nom character varying(50) NOT NULL,
    prenom character varying(50) NOT NULL,
    date_naissance date,
    adresse character varying(100),
    telephone character varying(15),
    email character varying(100)
);


ALTER TABLE public.client OWNER TO postgres;

--
-- Name: client_id_client_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.client_id_client_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.client_id_client_seq OWNER TO postgres;

--
-- Name: client_id_client_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.client_id_client_seq OWNED BY public.client.id_client;


--
-- Name: compte; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.compte (
    id_compte integer NOT NULL,
    numero_compte character varying(20) NOT NULL,
    type_compte character varying(20) NOT NULL,
    solde numeric(10,2) DEFAULT 0.00,
    date_creation date DEFAULT CURRENT_DATE,
    id_client integer
);


ALTER TABLE public.compte OWNER TO postgres;

--
-- Name: compte_id_compte_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.compte_id_compte_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.compte_id_compte_seq OWNER TO postgres;

--
-- Name: compte_id_compte_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.compte_id_compte_seq OWNED BY public.compte.id_compte;


--
-- Name: execution_logs; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.execution_logs (
    id bigint NOT NULL,
    execution_type character varying(255) NOT NULL,
    message character varying(255) NOT NULL,
    "timestamp" timestamp(6) without time zone NOT NULL,
    CONSTRAINT execution_logs_execution_type_check CHECK (((execution_type)::text = ANY ((ARRAY['PYTHON'::character varying, 'R'::character varying])::text[])))
);


ALTER TABLE public.execution_logs OWNER TO postgres;

--
-- Name: execution_logs_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.execution_logs ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.execution_logs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: execution_results; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.execution_results (
    id bigint NOT NULL,
    error text,
    executed_at timestamp(6) without time zone NOT NULL,
    output text,
    status character varying(20) NOT NULL,
    script_id bigint,
    execution_time character varying(255),
    CONSTRAINT execution_results_status_check CHECK (((status)::text = ANY ((ARRAY['SUCCESS'::character varying, 'FAILED'::character varying, 'TIMEOUT'::character varying])::text[])))
);


ALTER TABLE public.execution_results OWNER TO postgres;

--
-- Name: execution_results_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.execution_results ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.execution_results_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: scripts; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.scripts (
    id bigint NOT NULL,
    content text NOT NULL,
    created_at timestamp(6) without time zone NOT NULL,
    created_by character varying(50) NOT NULL,
    title character varying(100) NOT NULL,
    type character varying(10) NOT NULL,
    CONSTRAINT scripts_type_check CHECK (((type)::text = ANY (ARRAY[('PYTHON'::character varying)::text, ('R'::character varying)::text])))
);


ALTER TABLE public.scripts OWNER TO postgres;

--
-- Name: scripts_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.scripts ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.scripts_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: security_config; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.security_config (
    id bigint NOT NULL,
    config_type character varying(255) NOT NULL
);


ALTER TABLE public.security_config OWNER TO postgres;

--
-- Name: security_config_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.security_config_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.security_config_id_seq OWNER TO postgres;

--
-- Name: security_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.security_config_id_seq OWNED BY public.security_config.id;


--
-- Name: security_config_values; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.security_config_values (
    config_id bigint NOT NULL,
    value character varying(255),
    id bigint NOT NULL
);


ALTER TABLE public.security_config_values OWNER TO postgres;

--
-- Name: security_config_values_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.security_config_values ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.security_config_values_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: users; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users (
    username character varying(255) NOT NULL,
    enabled boolean NOT NULL,
    password character varying(255),
    role character varying(255)
);


ALTER TABLE public.users OWNER TO postgres;

--
-- Name: client id_client; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.client ALTER COLUMN id_client SET DEFAULT nextval('public.client_id_client_seq'::regclass);


--
-- Name: compte id_compte; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.compte ALTER COLUMN id_compte SET DEFAULT nextval('public.compte_id_compte_seq'::regclass);


--
-- Name: security_config id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.security_config ALTER COLUMN id SET DEFAULT nextval('public.security_config_id_seq'::regclass);


--
-- Data for Name: client; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.client (id_client, nom, prenom, date_naissance, adresse, telephone, email) FROM stdin;
1	Samar	Hm	1995-03-15	Ariana	0611122233	samar.hm@email.com
2	Wejden	Od	1998-06-22	Bizerte	0622233344	wejden.od@email.com
\.


--
-- Data for Name: compte; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.compte (id_compte, numero_compte, type_compte, solde, date_creation, id_client) FROM stdin;
1	TN5900112233445566	courant	1800.00	2025-05-13	1
2	TN5900223344556677	‚pargne	3000.00	2025-05-13	1
3	TN5900334455667788	courant	2100.00	2025-05-13	2
\.


--
-- Data for Name: execution_logs; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.execution_logs (id, execution_type, message, "timestamp") FROM stdin;
\.


--
-- Data for Name: execution_results; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.execution_results (id, error, executed_at, output, status, script_id, execution_time) FROM stdin;
84	\N	2025-05-09 15:33:36.037435	Exécution du code R...\n\nRésultat: 10.0\nTemps d'exécution: 497 ms	SUCCESS	55	2553679
86	Traceback (most recent call last):\n  File "/lib/python311.zip/_pyodide/_base.py", line 460, in eval_code\n    CodeRunner(\n  File "/lib/python311.zip/_pyodide/_base.py", line 248, in __init__\n    self.ast = next(self._gen)\n               ^^^^^^^^^^^^^^^\n  File "/lib/python311.zip/_pyodide/_base.py", line 144, in _parse_and_compile_gen\n    mod = compile(source, filename, mode, flags | ast.PyCF_ONLY_AST)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File "<exec>", line 1\n    print('hello\n          ^\nSyntaxError: unterminated string literal (detected at line 1)\n	2025-05-09 15:34:16.016934	Exécution du code PYTHON...\n\nErreur: Traceback (most recent call last):\n  File "/lib/python311.zip/_pyodide/_base.py", line 460, in eval_code\n    CodeRunner(\n  File "/lib/python311.zip/_pyodide/_base.py", line 248, in __init__\n    self.ast = next(self._gen)\n               ^^^^^^^^^^^^^^^\n  File "/lib/python311.zip/_pyodide/_base.py", line 144, in _parse_and_compile_gen\n    mod = compile(source, filename, mode, flags | ast.PyCF_ONLY_AST)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File "<exec>", line 1\n    print('hello\n          ^\nSyntaxError: unterminated string literal (detected at line 1)\n	FAILED	56	5236
87	\N	2025-05-09 15:35:02.388663	La moyenne est : 13,8	SUCCESS	55	1746801302361
88	\N	2025-05-09 15:36:40.288295	Exécution du code PYTHON...\nhello	SUCCESS	56	4808
90	\N	2025-05-09 15:37:47.440646	La moyenne est : 13,8	SUCCESS	57	1746801467421
91	Erreur serveur: could not find function 'pprint'	2025-05-09 15:37:58.491076	Exécution du code R...\n\nErreur: Erreur serveur: could not find function 'pprint'	FAILED	57	635
92	Erreur serveur: could not find function 'pprint'	2025-05-09 16:28:48.199899	Exécution du code R...\n\nErreur: Erreur serveur: could not find function 'pprint'	FAILED	55	938
93	Erreur serveur: Syntax error at 2 1 2 1 1 1: syntax error, unexpected END_OF_INPUT\n	2025-05-09 16:28:58.648624	Exécution du code R...\n\nErreur: Erreur serveur: Syntax error at 2 1 2 1 1 1: syntax error, unexpected END_OF_INPUT\n	FAILED	55	488
95	\N	2025-05-09 16:29:14.567902	7.0	SUCCESS	55	1746804554548
98	\N	2025-05-15 14:00:02.192745	Test depuis Spring Boot via Postman!\n2.0\n	SUCCESS	\N	1747314002187
99	Traceback (most recent call last):\n  File "<string>", line 1, in <module>\nModuleNotFoundError: No module named 'psycopg2'\n	2025-05-15 14:23:47.071842	\N	FAILED	\N	1747315427038
100	Traceback (most recent call last):\n  File "<string>", line 1, in <module>\nModuleNotFoundError: No module named 'psycopg2'\n	2025-05-15 14:24:15.113341	\N	FAILED	\N	1747315455111
101	\N	2025-05-15 14:25:46.989833	Erreur: /bin/sh: 1: psql: not found\n\n	SUCCESS	\N	1747315546983
102	\N	2025-05-15 14:36:06.487971	[{"id_client": 1, "nom": "Samar", "prenom": "Hm", "date_naissance": "1995-03-15", "adresse": "Ariana", "telephone": "0611122233", "email": "samar.hm@email.com"}, {"id_client": 2, "nom": "Wejden", "prenom": "Od", "date_naissance": "1998-06-22", "adresse": "Bizerte", "telephone": "0622233344", "email": "wejden.od@email.com"}]\n	SUCCESS	\N	1747316166484
103	Traceback (most recent call last):\n  File "<string>", line 1, in <module>\nModuleNotFoundError: No module named 'psycopg2'\n	2025-05-15 15:18:02.2998	\N	FAILED	\N	1747318682289
\.


--
-- Data for Name: scripts; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.scripts (id, content, created_at, created_by, title, type) FROM stdin;
55	print(3+7)	2025-05-09 15:33:35.9202	admin	script1	R
56	print('hello')	2025-05-09 15:34:02.954827	admin	script2	PYTHON
57	notes <- c(12, 15, 14, 10, 18)\n\nmoyenne <- mean(notes)\n\nprint(paste("La moyenne est :", moyenne))	2025-05-09 15:37:42.888222	admin	script1 v2	R
\.


--
-- Data for Name: security_config; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.security_config (id, config_type) FROM stdin;
\.


--
-- Data for Name: security_config_values; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.security_config_values (config_id, value, id) FROM stdin;
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.users (username, enabled, password, role) FROM stdin;
admin	t	$2a$10$kFl380ip8BkCVPxK53pEWe4MEtfmxO35EwCh9OgGmVpAyvdyrC4hm	ROLE_ADMIN
user	t	$2a$10$R5FsBZHJvjO/TNSc2g5fj.dNwZeopNsLMLOcz1pWoJT6QvdTUlOMO	ROLE_USER
\.


--
-- Name: client_id_client_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.client_id_client_seq', 2, true);


--
-- Name: compte_id_compte_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.compte_id_compte_seq', 3, true);


--
-- Name: execution_logs_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.execution_logs_id_seq', 1, false);


--
-- Name: execution_results_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.execution_results_id_seq', 103, true);


--
-- Name: scripts_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.scripts_id_seq', 57, true);


--
-- Name: security_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.security_config_id_seq', 1, false);


--
-- Name: security_config_values_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.security_config_values_id_seq', 1, false);


--
-- Name: client client_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.client
    ADD CONSTRAINT client_pkey PRIMARY KEY (id_client);


--
-- Name: compte compte_numero_compte_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.compte
    ADD CONSTRAINT compte_numero_compte_key UNIQUE (numero_compte);


--
-- Name: compte compte_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.compte
    ADD CONSTRAINT compte_pkey PRIMARY KEY (id_compte);


--
-- Name: execution_logs execution_logs_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.execution_logs
    ADD CONSTRAINT execution_logs_pkey PRIMARY KEY (id);


--
-- Name: scripts scripts_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.scripts
    ADD CONSTRAINT scripts_pkey PRIMARY KEY (id);


--
-- Name: security_config security_config_config_type_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.security_config
    ADD CONSTRAINT security_config_config_type_key UNIQUE (config_type);


--
-- Name: security_config security_config_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.security_config
    ADD CONSTRAINT security_config_pkey PRIMARY KEY (id);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (username);


--
-- Name: compte compte_id_client_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.compte
    ADD CONSTRAINT compte_id_client_fkey FOREIGN KEY (id_client) REFERENCES public.client(id_client) ON DELETE CASCADE;


--
-- Name: execution_results fk_execution_script; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.execution_results
    ADD CONSTRAINT fk_execution_script FOREIGN KEY (script_id) REFERENCES public.scripts(id);


--
-- Name: security_config_values security_config_values_config_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.security_config_values
    ADD CONSTRAINT security_config_values_config_id_fkey FOREIGN KEY (config_id) REFERENCES public.security_config(id);


--
-- PostgreSQL database dump complete
--

