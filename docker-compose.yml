
services:
  postgres:
    image: postgres:15
    container_name: postgres-sandbox
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - sandbox-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  spring-app:
    build: ./Sandbox-Spring
    image: sandbox-ci-cd-spring-app
    container_name: spring-boot-app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SERVER_PORT: 8085
    ports:
      - "8085:8085"
    networks:
      - sandbox-net

  python-api:
    build: ./python-api
    image: sandbox-ci-cd-python-api
    container_name: python-api
    depends_on:
      postgres:
        condition: service_healthy
    # environment:
    #   - DB_HOST=postgres
    #   - DB_PORT=5432
    #   - DB_NAME=sandbox
    #   - DB_USER=postgres
    #   - DB_PASSWORD=samar
    ports:
      - "8084:8083"  
    networks:
      - sandbox-net

  r-api:
    build:
      context: ./r-api
    image: sandbox-ci-cd-r-api
    ports:
      - "8086:8086"
    depends_on:
      - postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=postgres-sandbox
      - POSTGRES_PORT=5432
    networks:
      - sandbox-net


  frontend:
    build:
      context: ./angular-dashboard  
      dockerfile: Dockerfile
    image: sandbox-ci-cd-frontend
    container_name: frontend
    depends_on:
      - spring-app
    ports:
      - "4200:80" 
    volumes:
      - ./angular-dashboard/nginx.conf:/etc/nginx/conf.d/default.conf  
    networks:
      - sandbox-net

volumes:
  pgdata:

networks:
  sandbox-net:
    driver: bridge